{"ast":null,"code":"'use strict';\n\nvar isUnitlessNumber = require('./lib/CSSProperty').isUnitlessNumber;\n\nvar hyphenateStyleName = require('./lib/hyphenateStyleName');\n\nvar isArray = Array.isArray;\nvar keys = Object.keys;\nvar counter = 1; // Follows syntax at https://developer.mozilla.org/en-US/docs/Web/CSS/content,\n// including multiple space separated values.\n\nvar unquotedContentValueRegex = /^(normal|none|(\\b(url\\([^)]*\\)|chapter_counter|attr\\([^)]*\\)|(no-)?(open|close)-quote|inherit)((\\b\\s*)|$|\\s+))+)$/;\n\nfunction buildRule(key, value) {\n  if (!isUnitlessNumber[key] && typeof value === 'number') {\n    value = '' + value + 'px';\n  } else if (key === 'content' && !unquotedContentValueRegex.test(value)) {\n    value = \"'\" + value.replace(/'/g, \"\\\\'\") + \"'\";\n  }\n\n  return hyphenateStyleName(key) + ': ' + value + ';  ';\n}\n\nfunction styleToCssString(rules) {\n  var result = '';\n\n  if (!rules || keys(rules).length === 0) {\n    return result;\n  }\n\n  var styleKeys = keys(rules);\n\n  for (var j = 0, l = styleKeys.length; j < l; j++) {\n    var styleKey = styleKeys[j];\n    var value = rules[styleKey];\n\n    if (isArray(value)) {\n      for (var i = 0, len = value.length; i < len; i++) {\n        result += buildRule(styleKey, value[i]);\n      }\n    } else {\n      result += buildRule(styleKey, value);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = styleToCssString;","map":null,"metadata":{},"sourceType":"script"}