{"ast":null,"code":"import _classCallCheck from \"/user/src/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/user/src/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/user/src/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/user/src/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/user/src/app/src/Map.js\";\nimport React, { Component, useState, useEffect } from \"react\";\nimport { Map, TileLayer, useMapEvents } from \"react-leaflet\";\nimport Legend from \"./Legend\";\nimport { CoordinatesControl } from \"react-leaflet-coordinates\";\nimport HeatmapLayer from \"react-leaflet-heatmap-layer\"; //This is just pure styling\n\nfunction Header() {\n  return /*#__PURE__*/React.createElement(\"header\", {\n    className: \"header-Class\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, \"Testing out React-Leaflet\"));\n} //This is the main component. It will make a fetch request to the backend, process\n//the data received from the backend (remove the duds), before creating the map,\n//and plotting the data on the map \n\n\nvar MapLeaflet = /*#__PURE__*/function (_Component) {\n  _inherits(MapLeaflet, _Component);\n\n  var _super = _createSuper(MapLeaflet);\n\n  function MapLeaflet() {\n    var _this;\n\n    _classCallCheck(this, MapLeaflet);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      data: []\n    };\n    return _this;\n  }\n\n  _createClass(MapLeaflet, [{\n    key: \"componentDidMount\",\n    value: //fetch the data as soon as the component is mounted\n    function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"/data\").then(function (response) {\n        return response.json();\n      }).then(function (jsonData) {\n        _this2.setState({\n          data: jsonData\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var stateVar = {\n        lat: 30.4515,\n        lng: -91.1871,\n        zoom: 10\n      };\n      var totalArray = [];\n\n      for (var i = 0; i < this.state.data.length; i++) {\n        if (this.state.data[i][\"lat\"] != \"\") {\n          var depthArray = [];\n          depthArray.push(parseFloat(this.state.data[i][\"lat\"]));\n          depthArray.push(parseFloat(this.state.data[i][\"lon\"]));\n          depthArray.push(this.state.data[i][\"depth\"]);\n          totalArray.push(depthArray);\n        }\n      }\n\n      console.log(totalArray);\n      var position = [stateVar.lat, stateVar.lng];\n      return (\n        /*#__PURE__*/\n        //create the map and its tile layer, before graphing the data on the map\n        React.createElement(Map, {\n          center: position,\n          zoom: stateVar.zoom,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 7\n          }\n        }, /*#__PURE__*/React.createElement(TileLayer, {\n          attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 7\n          }\n        }), /*#__PURE__*/React.createElement(Legend, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 7\n          }\n        }), /*#__PURE__*/React.createElement(HeatmapLayer, {\n          fitBoundsOnLoad: true,\n          fitBoundsOnUpdate: true,\n          points: totalArray,\n          longitudeExtractor: function longitudeExtractor(m) {\n            return m[1];\n          },\n          latitudeExtractor: function latitudeExtractor(m) {\n            return m[0];\n          },\n          intensityExtractor: function intensityExtractor(m) {\n            return parseFloat(m[2]);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 7\n          }\n        }), /*#__PURE__*/React.createElement(CoordinatesControl, {\n          coordinates: \"decimal\",\n          position: \"topleft\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 7\n          }\n        }))\n      );\n    }\n  }]);\n\n  return MapLeaflet;\n}(Component);\n\nexport default MapLeaflet;","map":{"version":3,"names":["React","Component","useState","useEffect","Map","TileLayer","useMapEvents","Legend","CoordinatesControl","HeatmapLayer","Header","MapLeaflet","state","data","fetch","then","response","json","jsonData","setState","stateVar","lat","lng","zoom","totalArray","i","length","depthArray","push","parseFloat","console","log","position","m"],"sources":["/user/src/app/src/Map.js"],"sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\r\nimport { Map, TileLayer, useMapEvents } from \"react-leaflet\";\r\nimport Legend from \"./Legend\";\r\nimport { CoordinatesControl } from \"react-leaflet-coordinates\"\r\nimport HeatmapLayer from \"react-leaflet-heatmap-layer\"\r\n\r\n//This is just pure styling\r\nfunction Header(){\r\n  return(\r\n  <header className = 'header-Class'>\r\n    <p>Testing out React-Leaflet</p>\r\n  </header>\r\n  );\r\n}\r\n\r\n//This is the main component. It will make a fetch request to the backend, process\r\n//the data received from the backend (remove the duds), before creating the map,\r\n//and plotting the data on the map \r\nclass MapLeaflet extends Component {\r\n    \r\n\r\n  state ={\r\n    data: []\r\n  }\r\n  //fetch the data as soon as the component is mounted\r\n  componentDidMount(){\r\n    fetch(\"/data\").then((response) => response.json())\r\n    .then(jsonData => {\r\n      this.setState({ data: jsonData });\r\n    })\r\n  }\r\n  render() {\r\n    var stateVar = {\r\n      lat: 30.4515,\r\n      lng: -91.1871,\r\n      zoom: 10,\r\n    }\r\n    var totalArray = []\r\n    for(let i = 0; i < this.state.data.length; i++){\r\n      if(this.state.data[i][\"lat\"] != \"\"){\r\n        var depthArray = [];\r\n        depthArray.push(parseFloat(this.state.data[i][\"lat\"]));\r\n        depthArray.push(parseFloat(this.state.data[i][\"lon\"]));\r\n        depthArray.push(this.state.data[i][\"depth\"]);\r\n        totalArray.push(depthArray);\r\n      }\r\n    }\r\n    console.log(totalArray);\r\n    const position = [stateVar.lat, stateVar.lng]\r\n    \r\n    return(\r\n      //create the map and its tile layer, before graphing the data on the map\r\n      <Map center={position} zoom={stateVar.zoom}>\r\n      <TileLayer\r\n        attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n      />\r\n      <Legend />\r\n      <HeatmapLayer fitBoundsOnLoad\r\n            fitBoundsOnUpdate\r\n            points={totalArray}\r\n            longitudeExtractor={m => m[1]}\r\n            latitudeExtractor={m => m[0]}\r\n            intensityExtractor={m => parseFloat(m[2])}/>\r\n      <CoordinatesControl coordinates = \"decimal\" position=\"topleft\"/>\r\n    </Map>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MapLeaflet;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}