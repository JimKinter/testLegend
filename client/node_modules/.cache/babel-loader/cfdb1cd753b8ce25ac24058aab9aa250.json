{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\jimmy\\\\OneDrive\\\\Desktop\\\\Work\\\\testLegend\\\\testLegend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\jimmy\\\\OneDrive\\\\Desktop\\\\Work\\\\testLegend\\\\testLegend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\jimmy\\\\OneDrive\\\\Desktop\\\\Work\\\\testLegend\\\\testLegend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\jimmy\\\\OneDrive\\\\Desktop\\\\Work\\\\testLegend\\\\testLegend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nimport _slicedToArray from \"C:\\\\Users\\\\jimmy\\\\OneDrive\\\\Desktop\\\\Work\\\\testLegend\\\\testLegend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\jimmy\\\\OneDrive\\\\Desktop\\\\Work\\\\testLegend\\\\testLegend\\\\src\\\\Map.js\";\nimport React, { Component, useState, useEffect } from \"react\";\nimport { Map, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport Legend from \"./Legend\";\nimport HeatmapLayer from \"react-leaflet-heatmap-layer\";\n\nfunction Header() {\n  return /*#__PURE__*/React.createElement(\"header\", {\n    className: \"header-Class\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, \"Testing out React-Leaflet\"));\n} //This function will fetch the data that is being sent from the backend\n\n\nfunction GetData() {\n  var _useState = useState({\n    body: []\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setdata = _useState2[1]; // Using useEffect for single rendering\n\n\n  useEffect(function () {\n    // Using fetch to fetch the api from\n    // flask server it will be redirected to proxy\n    fetch(\"/data\").then(function (res) {\n      return res.json().then(function (data) {\n        // Setting a data from api\n        setdata({\n          body: data\n        });\n      });\n    });\n  }, []);\n  var arrData = data.body;\n  var totalArray = []; //go through the datapoints and process them into a format that the plugin can \n  //understand\n\n  for (var i = 0; i < arrData.length; i++) {\n    //make sure the data point isn't a dud\n    if (arrData[i][\"lat\"] !== \"\") {\n      var depthDict = [];\n      depthDict.push(parseFloat(arrData[i][\"lat\"]));\n      depthDict.push(parseFloat(arrData[i][\"lon\"]));\n      depthDict.push(arrData[i][\"depth\"]);\n      totalArray.push(depthDict);\n    }\n  } //return the array\n\n\n  return totalArray;\n}\n\nvar MapLeaflet = /*#__PURE__*/function (_Component) {\n  _inherits(MapLeaflet, _Component);\n\n  var _super = _createSuper(MapLeaflet);\n\n  function MapLeaflet() {\n    var _this;\n\n    _classCallCheck(this, MapLeaflet);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      data: []\n    };\n    return _this;\n  }\n\n  _createClass(MapLeaflet, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"/data\").then(function (response) {\n        return response.json();\n      }).then(function (jsonData) {\n        _this2.setState({\n          data: jsonData\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var stateVar = {\n        lat: 30.4515,\n        lng: -91.1871,\n        zoom: 10\n      };\n      var totalArray = [];\n\n      for (var i = 0; i < this.state.data.length; i++) {\n        if (this.state.data[i][\"lat\"] != \"\") {\n          var depthArray = [];\n          depthArray.push(parseFloat(this.state.data[i][\"lat\"]));\n          depthArray.push(parseFloat(this.state.data[i][\"lon\"]));\n          depthArray.push(this.state.data[i][\"depth\"]);\n          totalArray.push(depthArray);\n        }\n      }\n\n      console.log(totalArray);\n      var data = this.state.data;\n      console.log(this.data);\n      var position = [stateVar.lat, stateVar.lng]; //var data = processData(GetData().body);\n\n      console.log(data);\n      return (\n        /*#__PURE__*/\n        //create the map and its tile layer\n        React.createElement(Map, {\n          center: position,\n          zoom: stateVar.zoom,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 7\n          }\n        }, /*#__PURE__*/React.createElement(TileLayer, {\n          attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 7\n          }\n        }), /*#__PURE__*/React.createElement(Legend, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 7\n          }\n        }), /*#__PURE__*/React.createElement(HeatmapLayer, {\n          fitBoundsOnLoad: true,\n          fitBoundsOnUpdate: true,\n          points: data,\n          longitudeExtractor: function longitudeExtractor(m) {\n            return m[1];\n          },\n          latitudeExtractor: function latitudeExtractor(m) {\n            return m[0];\n          },\n          intensityExtractor: function intensityExtractor(m) {\n            return parseFloat(m[2]);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 7\n          }\n        }))\n      );\n    }\n  }]);\n\n  return MapLeaflet;\n}(Component);\n\nexport default MapLeaflet;","map":{"version":3,"names":["React","Component","useState","useEffect","Map","TileLayer","Marker","Popup","Legend","HeatmapLayer","Header","GetData","body","data","setdata","fetch","then","res","json","arrData","totalArray","i","length","depthDict","push","parseFloat","MapLeaflet","state","response","jsonData","setState","stateVar","lat","lng","zoom","depthArray","console","log","position","m"],"sources":["C:/Users/jimmy/OneDrive/Desktop/Work/testLegend/testLegend/src/Map.js"],"sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\r\nimport { Map, TileLayer, Marker, Popup } from \"react-leaflet\";\r\nimport Legend from \"./Legend\";\r\nimport HeatmapLayer from \"react-leaflet-heatmap-layer\"\r\n\r\nfunction Header(){\r\n  return(\r\n  <header className = 'header-Class'>\r\n    <p>Testing out React-Leaflet</p>\r\n  </header>\r\n  );\r\n}\r\n\r\n//This function will fetch the data that is being sent from the backend\r\nfunction GetData(){\r\n  const [data, setdata] = useState({\r\n\t\tbody: []\r\n\t});\r\n\t// Using useEffect for single rendering\r\n\tuseEffect(() => {\r\n\t\t// Using fetch to fetch the api from\r\n\t\t// flask server it will be redirected to proxy\r\n\t\tfetch(\"/data\").then((res) =>\r\n\t\t\tres.json().then((data) => {\r\n\t\t\t\t// Setting a data from api\r\n\t\t\t\tsetdata({\r\n\t\t\t\t\tbody: data\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t);\r\n\t}, []);\r\n  var arrData = data.body;\r\n  var totalArray = [];\r\n  //go through the datapoints and process them into a format that the plugin can \r\n  //understand\r\n  for(let i =0; i < arrData.length; i++){\r\n    //make sure the data point isn't a dud\r\n    if((arrData[i][\"lat\"] !== \"\")){\r\n      var depthDict = [];\r\n      depthDict.push(parseFloat(arrData[i][\"lat\"]));\r\n      depthDict.push(parseFloat(arrData[i][\"lon\"]));\r\n      depthDict.push(arrData[i][\"depth\"]);\r\n      totalArray.push(depthDict)\r\n    }\r\n  }\r\n  //return the array\r\n  return(totalArray);\r\n}\r\n\r\nclass MapLeaflet extends Component {\r\n  state ={\r\n    data: []\r\n  }\r\n  componentDidMount(){\r\n    fetch(\"/data\").then((response) => response.json())\r\n    .then(jsonData => {\r\n      this.setState({ data: jsonData });\r\n    })\r\n  }\r\n  render() {\r\n    var stateVar = {\r\n      lat: 30.4515,\r\n      lng: -91.1871,\r\n      zoom: 10,\r\n    }\r\n    var totalArray = []\r\n    for(let i = 0; i < this.state.data.length; i++){\r\n      if(this.state.data[i][\"lat\"] != \"\"){\r\n        var depthArray = [];\r\n        depthArray.push(parseFloat(this.state.data[i][\"lat\"]));\r\n        depthArray.push(parseFloat(this.state.data[i][\"lon\"]));\r\n        depthArray.push(this.state.data[i][\"depth\"]);\r\n        totalArray.push(depthArray);\r\n      }\r\n    }\r\n    console.log(totalArray);\r\n    var data = this.state.data\r\n    console.log(this.data);\r\n    const position = [stateVar.lat, stateVar.lng]\r\n    //var data = processData(GetData().body);\r\n    console.log(data);\r\n    \r\n    return(\r\n      //create the map and its tile layer\r\n      <Map center={position} zoom={stateVar.zoom}>\r\n      <TileLayer\r\n        attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n      />\r\n      <Legend />\r\n      <HeatmapLayer fitBoundsOnLoad\r\n            fitBoundsOnUpdate\r\n            points={data}\r\n            longitudeExtractor={m => m[1]}\r\n            latitudeExtractor={m => m[0]}\r\n            intensityExtractor={m => parseFloat(m[2])}/>\r\n    </Map>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MapLeaflet;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}